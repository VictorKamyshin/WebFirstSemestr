user www-data;
pid         logs/nginx.pid;
error_log   logs/nginx-main_error.log debug;


worker_processes    2;

events {
    worker_connections  1024;
    use                epoll;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##


    push_stream_shared_memory_size                100m;
    push_stream_max_channel_id_length             200;
    # max messages to store in memory
    push_stream_max_messages_stored_per_channel   20;
    # message ttl
    push_stream_message_ttl                       60m;
    # ping frequency
    push_stream_ping_message_interval             30s;
    # connection ttl to enable recycle
    push_stream_subscriber_connection_ttl         15m;
    # connection ttl for long polling
    push_stream_longpolling_connection_ttl        30m;
    push_stream_timeout_with_body                 off;

    # wildcard
    push_stream_wildcard_channel_prefix         "broad_";
    push_stream_wildcard_channel_max_qtd        3;


    # subscriber may create channels on demand or only authorized (publisher) may do it?
    push_stream_authorized_channels_only        off;

    push_stream_allowed_origins                 "*";

proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=cache:30m max_size=1G;
proxy_temp_path /var/lib/nginx/proxy 1 2;
proxy_ignore_headers Expires Cache-Control;
proxy_cache_use_stale error timeout invalid_header http_502;
proxy_cache_bypass $cookie_session;
proxy_no_cache $cookie_session;
   server {
	    listen 80;
	    server_name localhost;
	 location / {
		keepalive_timeout 900s;
		proxy_pass http://127.0.0.1:8000;
		proxy_set_header Host $http_host;
	    }
	 location /static/ {
		expires 30d;
		proxy_cache cache;
		proxy_cache_valid 10m;
		proxy_cache_valid 404 1m;
		root /home/victor/askme/askme/;
	    }
	 location /proxy1/ {
		keepalive_timeout 900s;
		proxy_pass http://127.0.0.1:8001;
		proxy_set_header Host $http_host;
	    }
	 location ^~ /uploads {
	    root /home/victor/askme/askme/uploads/;
	    }

	location /pub {
	    # activate publisher (admin) mode for this location
	    push_stream_publisher admin;

	    # query string based channel id
	    push_stream_channels_path             $arg_id;
	}

	location ~ /sub/(.*) {
	    # positional channel path
            push_stream_channels_path                   $1;
            default_type application/json;
	    # activate subscriber (streaming) mode for this location
            push_stream_subscriber;
	}


        location ~ /jsonp/(.*) {
            # activate long-polling mode for this location
            push_stream_subscriber      long-polling;
           # push_stream_last_recievid_message_mytext                    "$arg_mytext"

            # positional channel path
            push_stream_channels_path         $1;
            default_type application/json; 
        }
    }
}
